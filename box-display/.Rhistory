<<<<<<< HEAD
shiny::runApp()
install.packages("shinydashboard")
runApp()
runApp()
setwd("~/Documents/info-201/final-project/TeamGirlPowerPlusOne/box-display")
runApp()
runApp()
install.packages("magrittr")
library(magrittr)
runApp()
runApp()
runApp()
runApp()
runApp()
df_2014 <- read.csv('./States Level Data/Crime And Education Rate2014-StatesLevel.csv')
getwd()
setwd('C:/Users/zacht/Documents/info-201/final-project/TeamGirlPowerPlusOne')
getwd()
df_2014 <- read.csv('./States Level Data/Crime And Education Rate2014-StatesLevel.csv')
runApp('box-display')
df_2014 <- read.csv('./States Level Data/Crime And Education Rate2014-StatesLevel.csv')
df_2013 <- read.csv('./States Level Data/Crime And Education Rate2013-StatesLevel.csv')
View(df_2013)
df$State
df
runApp('box-display')
runApp('box-display')
runApp('box-display')
runApp('box-display')
runApp('box-display')
runApp('box-display')
runApp('box-display')
runApp('box-display')
runApp('box-display')
df.data <- df_2013
runApp('box-display')
runApp('box-display')
runApp('box-display')
install.packages("googleVis")
runApp('box-display')
getwd()
runApp('box-display')
runApp('box-display')
runApp('box-display')
getwd()
runApp('box-display')
setwd("~/Documents/info-201/final-project/TeamGirlPowerPlusOne/box-display")
getwd()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/info-201/final-project/TeamGirlPowerPlusOne/educationInfo.R', echo=TRUE)
source('~/Documents/info-201/final-project/TeamGirlPowerPlusOne/educationInfo.R', echo=TRUE)
runApp()
runApp()
View(df_2013)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
=======
dataset <- read.spss(db, to.data.frame = TRUE)
#convert the spss file to .csv
write.csv(dataset, file='~/Desktop/dataset1.csv')
#Friends marijuan ever
var_1 <- dataset$D12
var_2 <- dataset$B4
var_3 <- dataset$B8
var_4 <- dataset$D7
Variable <- c("Friends marijuan ever",
"Hours internet per day",
"Text messages per day",
"Times go out for meal per week")
N <- c((table(var_1) %>% sum()),
(table(var_2) %>% sum()),
(table(var_3) %>% sum()),
(table(var_4) %>% sum()))
Standard_Deviation <- c(round(sd(var_1,  na.rm=TRUE), digit = 4),
round(sd(var_2,  na.rm=TRUE), digit = 4),
round(sd(var_3,  na.rm=TRUE), digit = 4),
round(sd(var_4,  na.rm=TRUE), digit = 4))
Mean <- c(round(mean(var_1, na.rm = TRUE), digit = 4),
round(mean(var_2, na.rm = TRUE), digit = 4),
round(mean(var_3, na.rm = TRUE), digit = 4),
round(mean(var_4, na.rm = TRUE), digit = 4))
Std_Error_Mean <- c(round(sd(var_1,  na.rm=TRUE)/sqrt(length(var_1)), digit = 4),
round(sd(var_2,  na.rm=TRUE)/sqrt(length(var_2)), digit = 4),
round(sd(var_3,  na.rm=TRUE)/sqrt(length(var_2)), digit = 4),
round(sd(var_4,  na.rm=TRUE)/sqrt(length(var_2)), digit = 4))
df <- data.frame(Variable, N, Standard_Deviation, Mean, Std_Error_Mean)
C7 #Dates last week
A2 #Age
C8 #Satisfaction with life
A8 #major
B8 #How many text messages do you usually send each day?
#Dates last week vs Age
hist(dataset$C7)
hist(as.numeric(dataset$A2))
View(dataset)
as.character(dataset$A2)
as.numeric(dataset$A2)
ggplot(data = dataset, aes(dataset$A2)) +
geom_histogram(breaks=seq("Male", "Female", by =2 ),
col="red",
fill="green",
alpha=.2) +
labs(title="Numbers of Dates last Week vs. GEnder") +
labs(x=dataset$A2, y=dataset$C7) +
ylim(c(min(dataset$C7), max(dataset$C7)))
ggplot(data = dataset, aes(dataset$A2)) +
labs(title="Numbers of Dates last Week vs. GEnder") +
labs(x=dataset$A2, y=dataset$C7) +
ylim(c(min(dataset$C7), max(dataset$C7)))
counts <- table(dataset$C7)
counts
View(data)
View(data)
getwd()
data <- read.table('/Users/linhly/Desktop/INFO201/a8-building-apps-linhly2012/data/cereal.tsv',
header=TRUE, sep="\t")
data
data -> data %>% as.data.frame()
data -> data %>% data.frame()
library('shiny')
library('dplyr')
library('plotly')
library('ggplot2')
data <- read.table('/Users/linhly/Desktop/INFO201/a8-building-apps-linhly2012/data/cereal.tsv',
header=TRUE)
data -> data %>% data.frame()
data -> data %>% as.data.frame()
data -> data %>% as.data.frame.matrix()
data -> as.data.frame.matrix(data)
library('shiny')
library('dplyr')
library('plotly')
library('ggplot2')
data <- read.table('/Users/linhly/Desktop/INFO201/a8-building-apps-linhly2012/data/cereal.tsv',
header=TRUE)
data -> as.data.frame.matrix(data)
is.data.frame(data)
View(data)
plot_ly(data, x= ~name, y = ~sodium, color = ~name,
size = ~sodium, text = ~paste(name, ":", name))
g <- plot_ly(data, x= ~name, y = ~sodium, color = ~name,
size = ~sodium, text = ~paste(name, ":", name))
View(g)
g
p <- ggplot(data = data, aes(x = name, y = sodium)) +
geom_point(aes(text = paste(name, ":", sodium))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
p <- ggplot(data = data, aes(x = ~name, y = ~sodium)) +
geom_point(aes(text = paste(name, ":", sodium))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
p <- ggplot(data = data, aes(x = name, y = sodium)) +
geom_point(aes(text = paste(name, ":", sodium)))
ggplotly(p)
p <- ggplot(data = data, aes(x = ~name, y = ~sodium)) +
geom_point(aes(text = paste(~name, ":", ~sodium)))
p <- ggplot(data = data, aes(x = data$name, y = data$sodium)) +
geom_point(aes(text = paste(data$name, ":", data$sodium)))
View(diamond)
View(diamonds)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
d <- diamonds
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
ggplotly(p)
library('plotly')
library('ggplot2')
data <- read.table('/Users/linhly/Desktop/INFO201/a8-building-apps-linhly2012/data/cereal.tsv',
header=TRUE)
library(ggplotly)
View(diamonds)
set.seed(100)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
name <- 'Triples'
for(name in name_brand){
if(input$name == name){
plot.data <- data %>% select(name)
}
}
name_brand <- data %>% select(name) %>% as.list()
library(dplyr)
name_brand <- data %>% select(name) %>% as.list()
for(name in name_brand){
if(input$name == name){
plot.data <- data %>% select(name)
}
}
name <- 'Triples'
for(str_name in name_brand){
if(name == str_name){
plot.data <- data %>% select(str_name)
}
}
plot.data <- data %>% filter(name == str_name)
plot.data
plot.data <- data %>% filter(name == str_name)
plot.data
print str_name
for(str_name in name_brand){
print (str_name)
if(name == str_name) {
plot.data <- data %>% filter(name == str_name)
}
}
for(str_name in name_brand){
if(name == str_name) {
plot.data <- data %>% filter(name == str_name)
}
print(str_name)
}
data%>% select(name)
data%>% select(name) %>% filter(name)
names <- 'Nutri-grain_Wheat'
data%>% select(name) %>% filter(names)
data%>% select(name) %>% filter(name == names)
data%>% select(name) %>% filter(name == names) %>% as.list()
data%>% select(name) %>% filter(name == names)
data%>% select(name) %>% filter(name == names) %>% as.matrix()
str_compare <- data%>% select(str_name) %>% filter(name == str_names) %>% as.matrix()
for(str_name in name_brand){
str_compare <- data%>% select(str_name) %>% filter(name == str_names) %>% as.matrix()
if(name == data%>% select(str_name)) {
plot.data <- data %>% filter(name == str_name)
}
print(str_name)
}
str_name <- 'Nutri-grain_Wheat'
str_compare <- data%>% select(str_name) %>% filter(name == str_name) %>% as.matrix()
str_compare <- data%>% select(str_name) %>% filter(name == str_name) %>% as.matrix()
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
print(str_compare)
if(name == data%>% select(str_name)) {
plot.data <- data %>% filter(name == str_name)
}
print(str_compare)
if(str_name == str_compare) {
plot.data <- data %>% filter(name == str_compare)
}
plot.data <- data %>% filter(name == str_compare)
name <- 'Nutri-grain_Wheat'
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
print(str_compare)
if(name == str_compare) {
plot.data <- data %>% filter(name == str_name)
}
print(str_name)
}
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
print(str_compare)
if(name == str_compare) {
plot.data <- data %>% filter(name == str_name)
}
print(str_name)
}
print(str_name)
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
}
print(str_compare)
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
print(str_compare)
}
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
print(str_compare[1,])
}
parseInt(name)
eval(parse(text = "x"))
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
i <- which(data$name == str_compare)
print(str_compare[1,])
}
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
i <- which(data$name == str_compare)
print(i)
}
i <- which(data$name == str_compare)
print(data[i,])
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
i <- which(data$name == str_compare)
print(data[i,])
}
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
i <- which(data$name == str_compare)
print(paste(str_name, ":", i))
}
print(paste(str_name, ":", i, str_compare[i,]))
print(paste(str_compare[i,]))
name <- 'Nutri-grain_Wheat'
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
# if(name == str_compare) {
#   plot.data <- data %>% filter(name == str_name)
# }
i <- which(data$name == str_compare)
print(paste(str_compare[i,]))
}
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
if(name == str_compare) {
plot.data <- data %>% filter(name == str_name)
i <- which(data$name == str_compare)
}
print(plot.data)
}
if(identical(name, str_name)) {
plot.data <- data %>% filter(name == str_name)
i <- which(data$name == str_compare)
}
name <- 'Nutri-grain_Wheat'
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
if(identical(name, str_name)) {
plot.data <- data %>% filter(name == str_name)
i <- which(data$name == str_compare)
}
print(plot.data)
}
name <- 'Nutri-grain_Wheat'
for(str_name in name_brand){
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
if(identical(name, str_name)) {
plot.data <- data %>% filter(name == str_name)
i <- which(data$name == str_compare)
print(i)
break
}
}
str_compare <- data%>% select(name) %>% filter(name == str_name) %>% as.matrix()
if(identical(name, str_name)) {
plot.data <- data %>% filter(name == str_name)
i <- which(data$name == str_compare)
print(i)
break
}
View(name_brand)
View(name_brand)
str_compare <- name_brand %>% filter(name == str_name) %>% as.matrix()
name <- 'Nutri-grain_Wheat'
str_name <- 'Nutri-grain_Wheat'
str_compare <- name_brand %>% filter(name == str_name) %>% as.matrix()
name_brand <- data %>% select(name)
str_compare <- name_brand %>% filter(name == str_name) %>% as.matrix()
str_compare
str_compare[1,]
str_name <- 'Nutri-grain_Wheat'
str_compare <- name_brand %>% filter(name == str_name) %>% as.matrix()
i <- which(name_brand$name == str_compare)
i <- which(name_brand$str_name == str_compare)
str_compare[i,]
i <- which(name_brand$name== str_name)
str_compare[i,]
i <- which(name_brand$name== str_name)
str_compare[i,]
i <- which(name_brand$name == str_name)
str_compare[i,]
rownames(name_brand)
i <- which(name_brand$name == rownames(name_brand))
str_compare[i,]
str <- str_compare[i,]
str
View(str_compare)
str <- str_compare$name
str_compare <- name_brand %>% filter(name == str_name) %>% as.matrix()
View(str_compare)
str <- str_compare[1,]
str
as.numeric(rownames(str_compare))
str_compare <- name_brand %>% filter(name == str_name)
View(str_compare)
str_name <- '100%_Bran'
str_compare <- name_brand %>% filter(name == str_name)
str <- str_compare[1,]
str
str_compare <- name_brand %>% filter(name == str_name)
View(str_compare)
str_compare <- (name_brand %>% filter(name == str_name) %>% as.matrix())[1,]
View(str_compare)
str_compare
data %>% select(str_compare)
str_compare <- (name_brand %>% filter(name == str_name) %>% as.matrix())[1,]
data %>% select(str_compare)
data %>% filter(name == str_compare)
str_name <- '100%_Bran'
for(name_val in name_brand) {
str_compare <- (name_brand %>% filter(name == name_val) %>% as.matrix())[1,]
if(identical(str_name, str_compare)) {
str_compare
data %>% filter(name == str_compare)
print(data)
break
}
}
str_name <- '100%_Bran'
Test <- function(str_name) {
for(name_val in name_brand) {
str_compare <- (name_brand %>% filter(name == name_val) %>% as.matrix())[1,]
if(identical(str_name, str_compare)) {
str_compare
data %>% filter(name == str_compare)
print(data)
break
}
}
}
t <- Test(str_name)
t
str_name <- '100%_Bran'
str_compare <- (name_brand %>% filter(name == str_name) %>% as.matrix())[1,]
str_compare
data %>% filter(name == str_compare)
str_name <- '100%_Bran' #--> input$name
str_compare <- (name_brand %>% filter(name == str_name) %>% as.matrix())[1,]
str_compare
data %>% filter(name == str_compare)
str_compare <- (data %>% filter(name == input$name) %>% as.matrix())[1,]
str_compare <- (data %>% filter(name == str_name) %>% as.matrix())[1,]
str_compare
mfr <- 'N'
test_mfr <- 'N'
mfr_compare <- (data %>% filter(mfr == test_mfr) %>% as.matrix())[1, ]
mfr_compare
mfr_data <- data %>% select(everything()) %>% filter(mfr == mfr_compare)
mfr_data <- data %>% select(all) %>% filter(mfr == mfr_compare)
mfr_data <- data %>% select() %>% filter(mfr == mfr_compare)
mfr_data <- data %>% select(everything()) %>% filter(mfr == mfr_compare)
test_mfr <- 'N'
mfr_compare <- (data %>% filter(mfr == test_mfr) %>% as.matrix())[1,]
mfr_data <- data %>% select(everything()) %>% filter(mfr == mfr_compare)
mfr_data <- data %>% select(everything()) %>% filter(mfr == test_mfr)
mfr_data
mfr_compare
mfr_compare <- (data %>% select(mfr == test_mfr) %>% as.matrix())[1,]
mfr_compare <- (data %>% select(mfr) %>% filter(mfr == test_mfr) %>% as.matrix())[1,]
mfr_compare
mfr_data <- data %>% select(everything()) %>% filter(mfr == mfr_compare)
mfr_data
shiny::runApp('Desktop/INFO201/a8-building-apps-linhly2012')
manufacture <- data %>% select(everything()) %>% filter(mfr == mfr_compare)
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
if(input$mfr == mfr_compare) {
manufacture= data %>% select(everything()) %>% filter(mfr == mfr_compare)
}
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
ggplot(data,
aes(x=calories, y=name, color=factor(type))) + geom_point()
ggplot(data,
aes(x=calories, y=name, color=factor(mfr))) + geom_point()
ggplot(data,
aes(x=calories, y=mfr, color=factor(type))) + geom_point()
ggplot(data,
aes(x=calories, y=fat, color=factor(type))) + geom_point()
ggplot(data,
aes(x=calories, y=sodium, color=factor(name))) + geom_point()
ggplot(data,
aes(x=calories, y=sodium, color=factor(type))) + geom_point()
runApp('Desktop/INFO201/m18-shiny-complete/exercise-5')
ggplot(data,
aes(x=name, y=mfr, color=factor(type))) + geom_point()
ggplot(data,
aes(x=mfr, y=name, color=factor(type))) + geom_point()
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
type_compare <- (data %>% select(type) %>% unique())
type_compare
type_compare <- (data %>% select(type) %>% unique()) %>% as.matrix()
type_compare
plot.data <- data %>% select(everything()) %>% filter(type = type_compare[1, ])
plot.data <- data %>% select(everything()) %>% filter(type == type_compare[1, ])
plot.data
plot.data <- data %>% select(everything()) %>% filter(type == type_compare[2, ])
plot.data
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
type_compare <- data %>% select(type) %>% unique() %>% as.matrix()
type_compare
plot.data <- data %>% select(everything()) %>% filter(type == type_compare[1, ])
plot.data
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
plot.data = (data %>% select(everything()) %>% filter(type == type_compare[1, ]))$type
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
tmp_data <- data %>% select(everything()) %>% filter(mfr == mfr_compare)
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/m18-shiny-complete/exercise-5')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
type_compare <- data %>% select(type) %>% unique() %>% as.matrix()
type_compare
type <- type_compare[1, ]
type
type_compare
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
data_type <- data %>% select(everything()) %>% filter(type = input$type)
data_type <- data %>% select(everything()) %>% filter(type == type_compare[1, ])
data_type
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
data_type2 <- data %>% select(everything()) %>% filter(type == input$type)
input$type = 'K'
shiny::runApp('Desktop/INFO201/a8-building-apps-linhly2012')
shiny::runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
runApp('Desktop/INFO201/a8-building-apps-linhly2012')
shiny::runApp('Desktop/INFO/TeamGirlPowerPlusOne/box-display')
library(shinydashboard)
library(shiny)
library(dplyr)
library(googleVis)
library(ggplot2)
runApp('Desktop/INFO/TeamGirlPowerPlusOne/box-display')
>>>>>>> dc06e8f148795852302b3871b3b50c2a608bb124
